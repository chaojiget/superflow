name: Auto Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: ['main']

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.user.login == 'dependabot[bot]' || 
      contains(github.event.pull_request.labels.*.name, 'auto-merge') ||
      contains(github.event.pull_request.title, '[auto-merge]')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format -- --check

      - name: Build project
        run: npx grunt

      - name: Enable auto-merge
        if: success()
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  merge-feature-branches:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.head.ref != 'main' &&
      (contains(github.event.pull_request.labels.*.name, 'ready-to-merge') ||
       contains(github.event.pull_request.title, '[ready]'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run full test suite
        run: |
          npm run test
          npm run lint
          npm run format -- --check
          npx grunt

      - name: Check for conflicts
        run: |
          git checkout main
          git pull origin main
          git checkout ${{ github.event.pull_request.head.ref }}
          git merge main --no-commit --no-ff
          if [ $? -ne 0 ]; then
            echo "Merge conflicts detected"
            git merge --abort
            exit 1
          fi
          git reset --hard HEAD

      - name: Auto-merge if all checks pass
        if: success()
        run: |
          gh pr merge --auto --squash --delete-branch "$PR_URL" || true
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup-merged-branches:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete merged branch
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          if [ "$BRANCH_NAME" != "main" ] && [ "$BRANCH_NAME" != "master" ]; then
            git push origin --delete "$BRANCH_NAME" || echo "Branch already deleted"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
