name: Cleanup Merged Branches

on:
  schedule:
    # 每天凌晨2点执行一次清理
    - cron: '0 2 * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Delete merged branches
        run: |
          # 获取所有远程分支
          git fetch --all --prune

          # 获取已合并到main的分支
          MERGED_BRANCHES=$(git branch -r --merged origin/main | grep -v -E '(origin/main|origin/master|origin/HEAD)' | sed 's/origin\///' | xargs)

          if [ -n "$MERGED_BRANCHES" ]; then
            echo "发现已合并的分支: $MERGED_BRANCHES"
            for branch in $MERGED_BRANCHES; do
              echo "删除分支: $branch"
              git push origin --delete "$branch" || echo "无法删除分支 $branch"
            done
          else
            echo "没有发现需要清理的已合并分支"
          fi

      - name: Delete stale branches
        run: |
          # 删除30天前没有活动的分支（除了main和master）
          STALE_BRANCHES=$(git for-each-ref --format='%(refname:short) %(committerdate)' refs/remotes/origin | \
            awk '$2 < "'$(date -d '30 days ago' --iso-8601)'"' | \
            grep -v -E '(origin/main|origin/master|origin/HEAD)' | \
            cut -d' ' -f1 | sed 's/origin\///')

          if [ -n "$STALE_BRANCHES" ]; then
            echo "发现过期分支: $STALE_BRANCHES"
            for branch in $STALE_BRANCHES; do
              echo "删除过期分支: $branch"
              git push origin --delete "$branch" || echo "无法删除分支 $branch"
            done
          else
            echo "没有发现过期分支"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
