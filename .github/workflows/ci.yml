name: 🚀 Superflow CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 20

jobs:
  # 代码质量检查（单次运行，使用最新LTS）
  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          if npm ci; then
            echo "npm ci succeeded"
          else
            echo "npm ci failed, falling back to npm install"
            rm -f package-lock.json
            npm install
          fi

      - name: Run type check
        run: npm run type-check

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

  # 多版本矩阵测试
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          if npm ci; then
            echo "npm ci succeeded"
          else
            echo "npm ci failed, falling back to npm install"
            rm -f package-lock.json
            npm install
          fi

      - name: Run unit tests
        run: npm run test

      - name: Generate coverage report
        if: matrix.node-version == '20.x'
        run: npm run test:coverage

      - name: Upload coverage to codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  # 模块化测试
  module-tests:
    name: Module Tests
    runs-on: ubuntu-latest
    needs: [quality]

    strategy:
      fail-fast: false
      matrix:
        module: [ideas, planner, flow, nodes, run-center, shared]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          if npm ci; then
            echo "npm ci succeeded"
          else
            echo "npm ci failed, falling back to npm install"
            rm -f package-lock.json
            npm install
          fi

      - name: Run module tests (${{ matrix.module }})
        run: npm run test -- src/${{ matrix.module }}

      - name: Check module coverage (${{ matrix.module }})
        run: npm run test:coverage -- src/${{ matrix.module }} --reporter=text

  # 集成测试
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [quality, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          if npm ci; then
            echo "npm ci succeeded"
          else
            echo "npm ci failed, falling back to npm install"
            rm -f package-lock.json
            npm install
          fi

      - name: Run integration tests
        run: npm run test:integration

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        if: success() && hashFiles('dist/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: dist

  # 端到端测试（可选）
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [integration]
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          if npm ci; then
            echo "npm ci succeeded"
          else
            echo "npm ci failed, falling back to npm install"
            rm -f package-lock.json
            npm install
          fi

      - name: Build for production
        run: npm run build

      - name: Start dev server
        run: npm run preview &
        
      - name: Wait for server
        run: npx wait-on http://localhost:4173 --timeout 30000

      - name: Run E2E tests
        run: npm run test:e2e
