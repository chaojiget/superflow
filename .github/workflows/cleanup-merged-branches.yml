name: 清理已合并分支

on:
  push:
    branches: [main]
  schedule:
    # 每天北京时间早上9点运行 (UTC 1点)
    - cron: '0 1 * * *'
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write
  pull-requests: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 获取所有分支
        run: |
          git fetch --all --prune
          echo "=== 远程分支列表 ==="
          git branch -r

      - name: 清理已合并到main的远程分支
        run: |
          # 获取main分支的最新提交
          git checkout main
          git pull origin main
          
          # 找出所有已合并到main的远程分支
          echo "=== 检查已合并的分支 ==="
          for branch in $(git branch -r --merged main | grep -v "origin/main" | grep -v "HEAD" | sed 's|origin/||'); do
            echo "分支 $branch 已合并到main"
            
            # 跳过特定分支
            if [[ "$branch" == "dependabot/"* ]] || [[ "$branch" == "codex/"* ]]; then
              echo "删除远程分支: $branch"
              git push origin --delete "$branch" || echo "删除分支 $branch 失败或已被删除"
            else
              echo "跳过系统分支: $branch"
            fi
          done

      - name: 清理过期的dependabot分支
        run: |
          # 删除超过7天未更新的dependabot分支
          echo "=== 清理过期的dependabot分支 ==="
          for branch in $(git branch -r | grep "origin/dependabot/" | sed 's|origin/||'); do
            # 获取分支最后更新时间
            last_commit_date=$(git log -1 --format="%at" "origin/$branch" 2>/dev/null || echo "0")
            current_date=$(date +%s)
            days_old=$(( ($current_date - $last_commit_date) / 86400 ))
            
            if [ $days_old -gt 7 ]; then
              echo "删除过期分支 $branch (${days_old}天前)"
              git push origin --delete "$branch" || echo "删除分支 $branch 失败或已被删除"
            else
              echo "保留分支 $branch (${days_old}天前)"
            fi
          done

      - name: 清理本地跟踪的远程分支
        run: |
          echo "=== 清理本地跟踪的远程分支 ==="
          git remote prune origin
          git gc --prune=now

      - name: 报告清理结果
        run: |
          echo "=== 清理完成后的远程分支 ==="
          git branch -r
          echo "=== 清理完成 ==="