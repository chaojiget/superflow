name: 🚀 功能开发任务
description: 新功能开发或模块实现任务
title: "[T{任务编号}] {任务描述}"
labels: ["type/feature", "status/planning"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        ## 📋 任务信息模板
        请填写完整的任务信息，确保团队成员能够独立开发。

  - type: input
    id: task_id
    attributes:
      label: "📝 任务编号"
      description: "格式：T{阶段}.{序号}，如 T1.1、T2.3"
      placeholder: "T1.1"
    validations:
      required: true

  - type: dropdown
    id: module
    attributes:
      label: "🏗️ 负责模块"
      description: "选择此任务归属的模块"
      options:
        - "shared/types (类型定义)"
        - "shared/runtime (运行时)"
        - "shared/storage (存储层)"
        - "flow (流程画布)"
        - "nodes (节点系统)"
        - "ideas (AI集成)"
        - "planner (蓝图转换)"
        - "run-center (运行中心)"
        - "components (组件库)"
        - "docs (文档)"
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: "⚡ 优先级"
      description: "任务优先级"
      options:
        - "🔥 Critical (关键路径)"
        - "🔴 High (重要)"
        - "🟡 Medium (中等)"
        - "🔵 Low (较低)"
    validations:
      required: true

  - type: input
    id: assignee
    attributes:
      label: "👤 负责人"
      description: "GitHub 用户名"
      placeholder: "@username"

  - type: input
    id: reviewer
    attributes:
      label: "👀 代码评审人"
      description: "GitHub 用户名"
      placeholder: "@reviewer"

  - type: input
    id: estimated_days
    attributes:
      label: "⏰ 预估工期"
      description: "预计开发天数"
      placeholder: "3"

  - type: textarea
    id: description
    attributes:
      label: "📄 任务描述"
      description: "详细描述要实现的功能和技术要求"
      placeholder: |
        ## 功能概述
        实现 Web Worker 沙箱执行环境...

        ## 技术要求
        - 使用 TypeScript 严格模式
        - 支持 AbortController 取消机制
        - 完整的错误处理

        ## 核心文件
        - `src/shared/runtime/worker.ts`
        - `src/shared/runtime/client.ts`
    validations:
      required: true

  - type: textarea
    id: acceptance_criteria
    attributes:
      label: "✅ 验收标准"
      description: "明确的验收条件，确保质量"
      placeholder: |
        - [ ] 可执行简单 JavaScript 代码
        - [ ] 支持 15s 硬超时控制
        - [ ] 错误信息正确返回主线程
        - [ ] 单元测试覆盖率 ≥ 80%
        - [ ] TypeScript 类型检查通过
        - [ ] 文档和示例完整
    validations:
      required: true

  - type: textarea
    id: api_contract
    attributes:
      label: "🔗 接口约定"
      description: "定义此任务对外暴露的接口"
      placeholder: |
        ```typescript
        // 导出接口
        export interface WorkerClient {
          execute(request: ExecRequest): Promise<ExecResult>
          terminate(): Promise<void>
        }

        // 输入类型
        interface ExecRequest {
          nodeId: string
          code: string
          input: unknown
          timeout?: number
        }
        ```

  - type: textarea
    id: dependencies
    attributes:
      label: "⛓️ 依赖关系"
      description: "此任务依赖的其他任务或模块"
      placeholder: |
        **前置依赖：**
        - #123 (T1.1 类型系统)
        - #124 (T1.2 基础工具)

        **后续任务：**
        - T3.1 节点执行会依赖此任务

  - type: textarea
    id: testing_plan
    attributes:
      label: "🧪 测试计划"
      description: "如何验证功能正确性"
      placeholder: |
        **单元测试：**
        - 正常执行流程
        - 超时场景
        - 错误处理

        **集成测试：**
        - 与主线程通信
        - 复杂代码执行

        **手动测试：**
        - 浏览器兼容性验证

  - type: checkboxes
    id: ready_conditions
    attributes:
      label: "🎯 准备就绪条件"
      description: "开始此任务前需要满足的条件"
      options:
        - label: "依赖任务已完成"
        - label: "接口约定已确认"
        - label: "技术方案已评审"
        - label: "测试环境已准备"